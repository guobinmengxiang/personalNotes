在 Java 多线程中，除了可以使用 synchronized 关键字来实现线程之间的共享（同步）与互斥之外，
还可以使用 RenntrantLock.java 锁实现相同的效果，并且在扩展功能上比 synchronized 还要强很多，
RenntrantLock.java 具备嗅探锁定、多路分支通知等相关功能。
Lock 接口的概念
Lock 接口提供了比使用 synchronized 方法和语句更广泛的锁定操作。它们允许更灵活的结构，可以具有完全不同的属性，并且可以支持多个关联的 Condition 条件对象。
锁是一种工具，用于控制多个线程对共享资源的访问。通常，锁提供对共享资源的独占访问：一次只有一个线程可以获取锁，对共享资源的所有访问都要求首先获取锁。但是，有些锁可能允许并发访问共享资源，例如 ReadWriteLock 的读锁。